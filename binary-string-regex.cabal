cabal-version:      2.4
name:               binary-string-regex
version:            0.1.0.0

synopsis: Provides a function to generate a regex for matching a binary string divisible by a number

description: Small proof-of-concept that constructs a DFA then removes all states until a full regular expression is obtained.
             Seems to work alright but generates fairly long regex. Performance for creating the regex is decent, but matching
             using the regex is CPU and memory intensive.

bug-reports: https://github.com/jdkleuver/binary-string-regex/issues

license: MIT
author:             Jack de Kleuver
maintainer:         jackdekleuver@gmail.com

extra-source-files: CHANGELOG.md

library
    exposed-modules:  BinaryRegex

    build-depends:    base, containers
    hs-source-dirs:   src
    default-language: Haskell2010

test-suite binary-string-regex-test
    default-language: Haskell2010
    type:             exitcode-stdio-1.0

    hs-source-dirs:   test
    main-is:          TestBinaryRegex.hs
    build-depends:    base, binary-string-regex, hspec, QuickCheck, regex-tdfa
